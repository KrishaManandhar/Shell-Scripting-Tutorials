$ cat pets.txt
goldfish
dog
cat
parrot
dog
goldfish
goldfish

# sort --> for arranging in alphabetically
$ sort pets.txt
cat
dog
dog
goldfish
goldfish
goldfish
parrot

# uniq --> for unique word
$ uniq pets.txt
goldfish
dog
cat
parrot
dog
goldfish

# Pipeline for sorting and then unique
$ sort pets.txt | uniq
cat
dog
goldfish
parrot

--------------------------------------------------------------------------------------------------------------------------------


Some commands, such as tr, only accept “standard input” as input (not strings or filenames):

    tr (translate) - replaces characters in input text.
        Syntax: tr [OPTIONS] [target characters] [replacement characters]


# pipeline that took string as input and produce output replacing vowels with underscore(_)
$ echo "Linux and shell scripting are awesome\!" | tr "aeiou" "_"
L_n_x _nd sh_ll scr_pt_ng _r_ _w_s_m_!

# pipeline that took string as input and produce output replacing consonants with underscore(_)
$ echo "Linux and shell scripting are awesome\!" | tr -c "aeiou" "_"
_i_u__a_____e______i__i___a_e_a_e_o_e_

# Replaced small letters with capital letters
$ cat pets.txt | tr "[a-z]" "[A-Z]"
GOLDFISH
DOG
CAT
PARROT
DOG
GOLDFISH
GOLDFISH

# pipeline that sort , unique and replaced small letters
$ sort pets.txt | uniq | tr "[a-z]" "[A-Z]"
CAT
DOG
GOLDFISH
PARROT

------------------------------------------------------------------------------------------------------------------------
# got json from url
$ curl -s --location --request GET https://api.coinstats.app/public/v1/coins/bitcoin\?currency\=USD
{
  "coin": {
    "id": "bitcoin",
    "icon": "https://static.coinstats.app/coins/Bitcoin6l39t.png",
    "name": "Bitcoin",
    "symbol": "BTC",
    "rank": 1,
    "price": 57907.78008618953,
    "priceBtc": 1,
    "volume": 48430621052.9856,
    "marketCap": 1093175428640.1146,
    "availableSupply": 18877868,
    "totalSupply": 21000000,
    "priceChange1h": -0.19,
    "priceChange1d": -0.4,
    "priceChange1w": -9.36,
    "websiteUrl": "http://www.bitcoin.org",
    "twitterUrl": "https://twitter.com/bitcoin",
    "exp": [
      "https://blockchair.com/bitcoin/",
      "https://btc.com/",
      "https://btc.tokenview.com/"
    ]
  }
}

---------------------------------------------------------------------------------------------------
grep -oE "\"price\"\s*:\s*[0-9]*?\.[0-9]*"

Let’s break down the details of this statement:

    -o tells grep to only return the matching portion
    -E tells grep to be able to use extended regex symbols such as ?
    \"price\" matches the string "price"
    \s* matches any number (including 0) of whitespace (\s) characters
    : matches :
    [0-9]* matches any number of digits (from 0 to 9)
    ?\. optionally matches a . (this is in case price were an integer)

# got json from url and extract price 
$ curl -s --location --request GET https://api.coinstats.app/public/v1/coins/bitcoin\?currency\=USD |\
    grep -oE "\"price\":\s*[0-9]*?\.[0-9]*"
"price": 57907.78008618953

# got json from url and extract price and then extracted values
$ curl -s --location --request GET https://api.coinstats.app/public/v1/coins/bitcoin\?currency\=USD |\
    grep -oE "\"price\":\s*[0-9]*?\.[0-9]*" |\
    grep -oE "[0-9]*?\.[0-9]*"
57907.78008618953
